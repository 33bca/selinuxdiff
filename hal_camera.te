expandtypeattribute(hal_camera)
expandtypeattribute(hal_camera_client)
expandtypeattribute(hal_camera_server)
neverallow hal_camera_server fs_type:file execute_no_trans;
neverallow hal_camera_server file_type:file execute_no_trans;
neverallow hal_camera_server domain:tcp_socket *;
neverallow hal_camera_server domain:udp_socket *;
neverallow hal_camera_server domain:rawip_socket *;
allow hal_camera_client hal_camera_server:binder { call transfer };
allow hal_camera_client hal_camera_server:binder transfer;
allow hal_camera_client hal_camera_server:fd *;
allow hal_camera_client hal_graphics_allocator:fd *;
allow hal_camera_client vendor_hal_camerapostproc_xiaomi_hwservice:hwservice_manager find;
allow hal_camera_client hal_camera_aon_service:service_manager find;
allow hal_camera_server hal_camera_client:binder transfer;
allow hal_camera_server hal_camera_client:binder { call transfer };
allow hal_camera_server hal_camera_client:fd *;
allow hal_camera_server hal_graphics_allocator:fd *;
allow hal_camera device:dir r_dir_perms;
allow hal_camera video_device:dir r_dir_perms;
allow hal_camera video_device:chr_file rw_file_perms;
allow hal_camera camera_device:chr_file rw_file_perms;
allow hal_camera ion_device:chr_file rw_file_perms;
allow hal_camera dmabuf_system_heap_device:chr_file r_file_perms;
allow hal_camera surfaceflinger:fd *;
allow hal_camera hal_allocator_server:fd *;
allow hal_camera shell:fd *;
allow hal_camera shell:fifo_file write;
allow hal_camera self:capability sys_nice;
allow hal_camera self:qipcrtr_socket create_socket_perms;
allow hal_camera vendor_camera_data_file:dir create_dir_perms;
allow hal_camera vendor_camera_data_file:file create_file_perms;
allow hal_camera vendor_synx_device:chr_file rw_file_perms;
allow hal_camera gpu_device:chr_file rw_file_perms;
allow hal_camera vendor_sysfs_jpeg:file r_file_perms;
allow hal_camera vendor_sysfs_ddr:file r_file_perms;
allow hal_camera vendor_qdisplay_service:service_manager find;
allow hal_camera fwk_sensor_hwservice:hwservice_manager find;
allow hal_camera system_server:binder { call transfer };
allow hal_camera system_server:binder transfer;
allow hal_camera system_server:fd *;
allow hal_camera_default fwk_sensor_hwservice:hwservice_manager find;
allow hal_camera_default dumpstate:fd *;
allow hal_camera_default dumpstate:fifo_file write;
allow hal_camera_default gpu_device:chr_file rw_file_perms;
allow hal_camera_default gpu_device:dir r_dir_perms;
allow hal_camera_default vendor_qdsp_device:chr_file r_file_perms;
allow hal_camera_default vendor_dmabuf_system_heap_device:chr_file r_file_perms;
allow hal_camera_default vendor_dmabuf_user_contig_heap_device:chr_file r_file_perms;
allow hal_camera_default vendor_xdsp_device:chr_file r_file_perms;
allow hal_camera_default system_server:binder transfer;
allow hal_camera_default tee_device:chr_file rw_file_perms;
allow hal_camera_default vendor_dmabuf_qseecom_heap_device:chr_file r_file_perms;
allow hal_camera_default vendor_dmabuf_qseecom_ta_heap_device:chr_file r_file_perms;
allow hal_camera_default vendor_membuf_dev:chr_file r_file_perms;
allow hal_camera_default vendor_dmabuf_display_heap_device:chr_file r_file_perms;
allow hal_camera_default vendor_vm_cp_non_pixel_device:chr_file r_file_perms;
allow hal_camera_default vendor_vm_cp_pixel_device:chr_file r_file_perms;
allow hal_camera_default mnt_vendor_file:dir search;
allow hal_camera_default camera_persist_file:dir search;
allow hal_camera_default vendor_persist_sensors_file:dir search;
allow hal_camera_default proc_pressure_cpu:file { getattr open read write };
allow hal_camera_default proc_pressure_io:file { getattr open read write };
allow hal_camera_default proc_pressure_mem:file { getattr open read write };
allow hal_camera_default proc_meminfo:file { getattr open read };
allow hal_camera_default self:capability sys_resource;
allow hal_camera_default self:unix_stream_socket { accept bind create getattr getopt listen read setopt write };
allow hal_camera_default self:capability2 block_suspend;
allow hal_camera_default vendor_sysfs_devfreq:dir search;
allow hal_camera_default vendor_sysfs_kgsl:file { getattr open read };
allow hal_camera_default vendor_sysfs_battery_supply:dir search;
allow hal_camera_default vendor_sysfs_battery_supply:file { getattr open read };
allow hal_camera_default vendor_sysfs_battery_supply:file open;
allow hal_camera_default vendor_sysfs_battery_supply:file read;
allow hal_camera_default stmvl53l5_device:chr_file { ioctl open read write };
allow hal_camera_default migt_dev:chr_file { ioctl open read write };
allow hal_camera_default migt_dev:chr_file rw_file_perms;
allow hal_camera_default camlog_device:chr_file { ioctl open read write };
allow hal_camera_default sysfs_dmabuf_stats:dir { open read search };
allow hal_camera_default sysfs_dmabuf_stats:file { open read };
allow hal_camera_default sysfs_perf:dir { open read search };
allow hal_camera_default sysfs_perf:file { getattr open read };
allow hal_camera_default sysfs_wake_lock:file { open read write };
allow hal_camera_default sysfs_csiphy_umd_paras:file { open read write };
allow hal_camera_default cgroup:file { getattr map open read write };
allow hal_camera_default platform_app:binder transfer;
allow hal_camera_default platform_app:binder { call transfer };
allow hal_camera_default platform_app:fd *;
allow hal_camera_default priv_app:binder transfer;
allow hal_camera_default priv_app:binder { call transfer };
allow hal_camera_default priv_app:fd *;
allow hal_camera_default system_app:binder transfer;
allow hal_camera_default system_app:binder { call transfer };
allow hal_camera_default system_app:fd *;
allow hal_camera_default sys_thermal_flash_state:file { getattr write };
allow hal_camera_default sys_thermal_flash_state:file w_file_perms;
allow hal_camera_default sys_thermal_torch_real_level:file { getattr write };
allow hal_camera_default sys_thermal_torch_real_level:file w_file_perms;
allow hal_camera_default hal_quickcamera_hwservice:hwservice_manager { add find };
dontaudit hal_camera graphics_device:dir search;
dontaudit hal_camera_default default_prop:file read;
allowxperm hal_camera self:ioctl qipcrtr_socket { range 0xc300 0xc305 };
allowxperm hal_camera_default vendor_dmabuf_display_heap_device:ioctl chr_file 0x4800;
init_daemon_domain(hal_camera_default)
r_dir_file(hal_camera, adsprpcd_file)
r_dir_file(hal_camera_default, vendor_sysfs_graphics)
r_dir_file(hal_camera_default, mnt_vendor_file)
r_dir_file(hal_camera_default, camera_persist_file)
r_dir_file(hal_camera_default, vendor_persist_sensors_file)
r_dir_file(hal_camera_default, domain)
unix_socket_connect(hal_camera, property, vendor_thermal-engine)
unix_socket_connect(hal_camera, vendor_thermal, init)
unix_socket_connect(hal_camera, vendor_thermal, vendor_thermal-engine)
unix_socket_connect(hal_camera_default, vendor_ssgtzd, vendor_ssgtzd)
unix_socket_connect(hal_camera_default, vendor_ssgtzd, init)
unix_socket_connect(hal_camera_default, property, vendor_ssgtzd)
get_prop(hal_camera, vendor_adsprpc_prop)
get_prop(hal_camera_default, exported_system_prop)
set_prop(hal_camera, vendor_camera_prop)
set_prop(hal_camera, vendor_camera_sensor_prop)
set_prop(hal_camera, vendor_miui_vcamera_prop)
set_prop(hal_camera_default, vendor_camera_p3enable_prop)
set_prop(hal_camera_default, log_prop)
binder_use(hal_camera_server)
binder_use(hal_camera_default)
vndbinder_use(hal_camera_default)
hal_server_domain(hal_camera_default, hal_camera)
hal_server_domain(hal_camera_default, vendor_hal_camerapostproc_xiaomi)
hal_server_domain(hal_camera_default, hal_camera_aon)
hal_client_domain(hal_camera_default, hal_graphics_allocator)
hal_client_domain(hal_camera_default, hal_graphics_composer)
hal_client_domain(hal_camera_default, vendor_hal_perf)
hal_client_domain(hal_camera_default, vendor_hal_vpp)
add_service(hal_camera_server, hal_camera_aon_service)
add_hwservice(hal_camera_server, vendor_hal_camerapostproc_xiaomi_hwservice)
hal_attribute_service(hal_camera, hal_camera_service)
hal_attribute_hwservice(hal_camera, hal_camera_hwservice)
hal_attribute_hwservice(hal_camera, vendor_hal_camera_postproc_hwservice)
hal_attribute_hwservice(hal_camera, vendor_hal_camera_aon_hwservice)
type hal_camera_default, domain;
type hal_camera_default_exec, exec_type, file_type, vendor_file_type;
type hal_camera_hwservice, hwservice_manager_type, protected_hwservice;
